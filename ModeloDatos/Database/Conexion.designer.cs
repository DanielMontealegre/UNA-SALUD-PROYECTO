#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModeloDatos.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UNA-SALUD")]
	public partial class ConexionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTipoAdministracion(TipoAdministracion instance);
    partial void UpdateTipoAdministracion(TipoAdministracion instance);
    partial void DeleteTipoAdministracion(TipoAdministracion instance);
    partial void InsertAlergia(Alergia instance);
    partial void UpdateAlergia(Alergia instance);
    partial void DeleteAlergia(Alergia instance);
    partial void InsertAfeccion(Afeccion instance);
    partial void UpdateAfeccion(Afeccion instance);
    partial void DeleteAfeccion(Afeccion instance);
    partial void InsertColesterol(Colesterol instance);
    partial void UpdateColesterol(Colesterol instance);
    partial void DeleteColesterol(Colesterol instance);
    partial void InsertAltura(Altura instance);
    partial void UpdateAltura(Altura instance);
    partial void DeleteAltura(Altura instance);
    partial void InsertContactoEmergencia(ContactoEmergencia instance);
    partial void UpdateContactoEmergencia(ContactoEmergencia instance);
    partial void DeleteContactoEmergencia(ContactoEmergencia instance);
    partial void InsertGlucemia(Glucemia instance);
    partial void UpdateGlucemia(Glucemia instance);
    partial void DeleteGlucemia(Glucemia instance);
    partial void InsertLaboratorio(Laboratorio instance);
    partial void UpdateLaboratorio(Laboratorio instance);
    partial void DeleteLaboratorio(Laboratorio instance);
    partial void InsertMedicamento(Medicamento instance);
    partial void UpdateMedicamento(Medicamento instance);
    partial void DeleteMedicamento(Medicamento instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertPeso(Peso instance);
    partial void UpdatePeso(Peso instance);
    partial void DeletePeso(Peso instance);
    partial void InsertPresionArterial(PresionArterial instance);
    partial void UpdatePresionArterial(PresionArterial instance);
    partial void DeletePresionArterial(PresionArterial instance);
    partial void InsertProcedimiento(Procedimiento instance);
    partial void UpdateProcedimiento(Procedimiento instance);
    partial void DeleteProcedimiento(Procedimiento instance);
    partial void InsertResultadoLaboratorio(ResultadoLaboratorio instance);
    partial void UpdateResultadoLaboratorio(ResultadoLaboratorio instance);
    partial void DeleteResultadoLaboratorio(ResultadoLaboratorio instance);
    partial void InsertSeguro(Seguro instance);
    partial void UpdateSeguro(Seguro instance);
    partial void DeleteSeguro(Seguro instance);
    partial void InsertTipoAdministracionVacuna(TipoAdministracionVacuna instance);
    partial void UpdateTipoAdministracionVacuna(TipoAdministracionVacuna instance);
    partial void DeleteTipoAdministracionVacuna(TipoAdministracionVacuna instance);
    partial void InsertTipoAlergia(TipoAlergia instance);
    partial void UpdateTipoAlergia(TipoAlergia instance);
    partial void DeleteTipoAlergia(TipoAlergia instance);
    partial void InsertTipoAlimentacion(TipoAlimentacion instance);
    partial void UpdateTipoAlimentacion(TipoAlimentacion instance);
    partial void DeleteTipoAlimentacion(TipoAlimentacion instance);
    partial void InsertTipoCobertura(TipoCobertura instance);
    partial void UpdateTipoCobertura(TipoCobertura instance);
    partial void DeleteTipoCobertura(TipoCobertura instance);
    partial void InsertTipoConcentracion(TipoConcentracion instance);
    partial void UpdateTipoConcentracion(TipoConcentracion instance);
    partial void DeleteTipoConcentracion(TipoConcentracion instance);
    partial void InsertTipoContactoEmergencia(TipoContactoEmergencia instance);
    partial void UpdateTipoContactoEmergencia(TipoContactoEmergencia instance);
    partial void DeleteTipoContactoEmergencia(TipoContactoEmergencia instance);
    partial void InsertTipoDosis(TipoDosis instance);
    partial void UpdateTipoDosis(TipoDosis instance);
    partial void DeleteTipoDosis(TipoDosis instance);
    partial void InsertTipoEstadoLaboratorio(TipoEstadoLaboratorio instance);
    partial void UpdateTipoEstadoLaboratorio(TipoEstadoLaboratorio instance);
    partial void DeleteTipoEstadoLaboratorio(TipoEstadoLaboratorio instance);
    partial void InsertTipoEstadoAfeccion(TipoEstadoAfeccion instance);
    partial void UpdateTipoEstadoAfeccion(TipoEstadoAfeccion instance);
    partial void DeleteTipoEstadoAfeccion(TipoEstadoAfeccion instance);
    partial void InsertTipoMedicacion(TipoMedicacion instance);
    partial void UpdateTipoMedicacion(TipoMedicacion instance);
    partial void DeleteTipoMedicacion(TipoMedicacion instance);
    partial void InsertTipoMarca(TipoMarca instance);
    partial void UpdateTipoMarca(TipoMarca instance);
    partial void DeleteTipoMarca(TipoMarca instance);
    partial void InsertTipoReacción(TipoReacción instance);
    partial void UpdateTipoReacción(TipoReacción instance);
    partial void DeleteTipoReacción(TipoReacción instance);
    partial void InsertVacuna(Vacuna instance);
    partial void UpdateVacuna(Vacuna instance);
    partial void DeleteVacuna(Vacuna instance);
    #endregion
		
		public ConexionDataContext() : 
				base(global::ModeloDatos.Properties.Settings.Default.UNA_SALUDConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TipoAdministracion> TipoAdministracion
		{
			get
			{
				return this.GetTable<TipoAdministracion>();
			}
		}
		
		public System.Data.Linq.Table<Alergia> Alergia
		{
			get
			{
				return this.GetTable<Alergia>();
			}
		}
		
		public System.Data.Linq.Table<Afeccion> Afeccion
		{
			get
			{
				return this.GetTable<Afeccion>();
			}
		}
		
		public System.Data.Linq.Table<Colesterol> Colesterol
		{
			get
			{
				return this.GetTable<Colesterol>();
			}
		}
		
		public System.Data.Linq.Table<Altura> Altura
		{
			get
			{
				return this.GetTable<Altura>();
			}
		}
		
		public System.Data.Linq.Table<ContactoEmergencia> ContactoEmergencia
		{
			get
			{
				return this.GetTable<ContactoEmergencia>();
			}
		}
		
		public System.Data.Linq.Table<Glucemia> Glucemia
		{
			get
			{
				return this.GetTable<Glucemia>();
			}
		}
		
		public System.Data.Linq.Table<Laboratorio> Laboratorio
		{
			get
			{
				return this.GetTable<Laboratorio>();
			}
		}
		
		public System.Data.Linq.Table<Medicamento> Medicamento
		{
			get
			{
				return this.GetTable<Medicamento>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Paciente
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<Peso> Peso
		{
			get
			{
				return this.GetTable<Peso>();
			}
		}
		
		public System.Data.Linq.Table<PresionArterial> PresionArterial
		{
			get
			{
				return this.GetTable<PresionArterial>();
			}
		}
		
		public System.Data.Linq.Table<Procedimiento> Procedimiento
		{
			get
			{
				return this.GetTable<Procedimiento>();
			}
		}
		
		public System.Data.Linq.Table<ResultadoLaboratorio> ResultadoLaboratorio
		{
			get
			{
				return this.GetTable<ResultadoLaboratorio>();
			}
		}
		
		public System.Data.Linq.Table<Seguro> Seguro
		{
			get
			{
				return this.GetTable<Seguro>();
			}
		}
		
		public System.Data.Linq.Table<TipoAdministracionVacuna> TipoAdministracionVacuna
		{
			get
			{
				return this.GetTable<TipoAdministracionVacuna>();
			}
		}
		
		public System.Data.Linq.Table<TipoAlergia> TipoAlergia
		{
			get
			{
				return this.GetTable<TipoAlergia>();
			}
		}
		
		public System.Data.Linq.Table<TipoAlimentacion> TipoAlimentacion
		{
			get
			{
				return this.GetTable<TipoAlimentacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoCobertura> TipoCobertura
		{
			get
			{
				return this.GetTable<TipoCobertura>();
			}
		}
		
		public System.Data.Linq.Table<TipoConcentracion> TipoConcentracion
		{
			get
			{
				return this.GetTable<TipoConcentracion>();
			}
		}
		
		public System.Data.Linq.Table<TipoContactoEmergencia> TipoContactoEmergencia
		{
			get
			{
				return this.GetTable<TipoContactoEmergencia>();
			}
		}
		
		public System.Data.Linq.Table<TipoDosis> TipoDosis
		{
			get
			{
				return this.GetTable<TipoDosis>();
			}
		}
		
		public System.Data.Linq.Table<TipoEstadoLaboratorio> TipoEstadoLaboratorio
		{
			get
			{
				return this.GetTable<TipoEstadoLaboratorio>();
			}
		}
		
		public System.Data.Linq.Table<TipoEstadoAfeccion> TipoEstadoAfeccion
		{
			get
			{
				return this.GetTable<TipoEstadoAfeccion>();
			}
		}
		
		public System.Data.Linq.Table<TipoMedicacion> TipoMedicacion
		{
			get
			{
				return this.GetTable<TipoMedicacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoMarca> TipoMarca
		{
			get
			{
				return this.GetTable<TipoMarca>();
			}
		}
		
		public System.Data.Linq.Table<TipoReacción> TipoReacción
		{
			get
			{
				return this.GetTable<TipoReacción>();
			}
		}
		
		public System.Data.Linq.Table<Vacuna> Vacuna
		{
			get
			{
				return this.GetTable<Vacuna>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoAdministracion")]
	public partial class TipoAdministracion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Medicamento> _Medicamento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoAdministracion()
		{
			this._Medicamento = new EntitySet<Medicamento>(new Action<Medicamento>(this.attach_Medicamento), new Action<Medicamento>(this.detach_Medicamento));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAdministracion_Medicamento", Storage="_Medicamento", ThisKey="Codigo", OtherKey="Administracion")]
		public EntitySet<Medicamento> Medicamento
		{
			get
			{
				return this._Medicamento;
			}
			set
			{
				this._Medicamento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.TipoAdministracion = this;
		}
		
		private void detach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.TipoAdministracion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alergia")]
	public partial class Alergia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private int _Tipo;
		
		private int _Reaccion;
		
		private string _Tratamiento;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<TipoAlergia> _TipoAlergia;
		
		private EntityRef<TipoReacción> _TipoReacción;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnTipoChanging(int value);
    partial void OnTipoChanged();
    partial void OnReaccionChanging(int value);
    partial void OnReaccionChanged();
    partial void OnTratamientoChanging(string value);
    partial void OnTratamientoChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Alergia()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			this._TipoAlergia = default(EntityRef<TipoAlergia>);
			this._TipoReacción = default(EntityRef<TipoReacción>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Int NOT NULL")]
		public int Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					if (this._TipoAlergia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reaccion", DbType="Int NOT NULL")]
		public int Reaccion
		{
			get
			{
				return this._Reaccion;
			}
			set
			{
				if ((this._Reaccion != value))
				{
					if (this._TipoReacción.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReaccionChanging(value);
					this.SendPropertyChanging();
					this._Reaccion = value;
					this.SendPropertyChanged("Reaccion");
					this.OnReaccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tratamiento", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Tratamiento
		{
			get
			{
				return this._Tratamiento;
			}
			set
			{
				if ((this._Tratamiento != value))
				{
					this.OnTratamientoChanging(value);
					this.SendPropertyChanging();
					this._Tratamiento = value;
					this.SendPropertyChanged("Tratamiento");
					this.OnTratamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Alergia", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Alergia.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Alergia.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlergia_Alergia", Storage="_TipoAlergia", ThisKey="Tipo", OtherKey="Codigo", IsForeignKey=true)]
		public TipoAlergia TipoAlergia
		{
			get
			{
				return this._TipoAlergia.Entity;
			}
			set
			{
				TipoAlergia previousValue = this._TipoAlergia.Entity;
				if (((previousValue != value) 
							|| (this._TipoAlergia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAlergia.Entity = null;
						previousValue.Alergia.Remove(this);
					}
					this._TipoAlergia.Entity = value;
					if ((value != null))
					{
						value.Alergia.Add(this);
						this._Tipo = value.Codigo;
					}
					else
					{
						this._Tipo = default(int);
					}
					this.SendPropertyChanged("TipoAlergia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoReacción_Alergia", Storage="_TipoReacción", ThisKey="Reaccion", OtherKey="Codigo", IsForeignKey=true)]
		public TipoReacción TipoReacción
		{
			get
			{
				return this._TipoReacción.Entity;
			}
			set
			{
				TipoReacción previousValue = this._TipoReacción.Entity;
				if (((previousValue != value) 
							|| (this._TipoReacción.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoReacción.Entity = null;
						previousValue.Alergia.Remove(this);
					}
					this._TipoReacción.Entity = value;
					if ((value != null))
					{
						value.Alergia.Add(this);
						this._Reaccion = value.Codigo;
					}
					else
					{
						this._Reaccion = default(int);
					}
					this.SendPropertyChanged("TipoReacción");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Afeccion")]
	public partial class Afeccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private string _Nombre;
		
		private int _Estado;
		
		private System.DateTime _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<TipoEstadoAfeccion> _TipoEstadoAfeccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Afeccion()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			this._TipoEstadoAfeccion = default(EntityRef<TipoEstadoAfeccion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._TipoEstadoAfeccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="Date NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="Date")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Afeccion", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Afeccion.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Afeccion.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoAfeccion_Afeccion", Storage="_TipoEstadoAfeccion", ThisKey="Estado", OtherKey="Codigo", IsForeignKey=true)]
		public TipoEstadoAfeccion TipoEstadoAfeccion
		{
			get
			{
				return this._TipoEstadoAfeccion.Entity;
			}
			set
			{
				TipoEstadoAfeccion previousValue = this._TipoEstadoAfeccion.Entity;
				if (((previousValue != value) 
							|| (this._TipoEstadoAfeccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEstadoAfeccion.Entity = null;
						previousValue.Afeccion.Remove(this);
					}
					this._TipoEstadoAfeccion.Entity = value;
					if ((value != null))
					{
						value.Afeccion.Add(this);
						this._Estado = value.Codigo;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("TipoEstadoAfeccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colesterol")]
	public partial class Colesterol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private double _LDL;
		
		private double _HDL;
		
		private double _Trigliceridos;
		
		private double _Colesterol1;
		
		private System.DateTime _Fecha;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnLDLChanging(double value);
    partial void OnLDLChanged();
    partial void OnHDLChanging(double value);
    partial void OnHDLChanged();
    partial void OnTrigliceridosChanging(double value);
    partial void OnTrigliceridosChanged();
    partial void OnColesterol1Changing(double value);
    partial void OnColesterol1Changed();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Colesterol()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDL", DbType="Float NOT NULL")]
		public double LDL
		{
			get
			{
				return this._LDL;
			}
			set
			{
				if ((this._LDL != value))
				{
					this.OnLDLChanging(value);
					this.SendPropertyChanging();
					this._LDL = value;
					this.SendPropertyChanged("LDL");
					this.OnLDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDL", DbType="Float NOT NULL")]
		public double HDL
		{
			get
			{
				return this._HDL;
			}
			set
			{
				if ((this._HDL != value))
				{
					this.OnHDLChanging(value);
					this.SendPropertyChanging();
					this._HDL = value;
					this.SendPropertyChanged("HDL");
					this.OnHDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trigliceridos", DbType="Float NOT NULL")]
		public double Trigliceridos
		{
			get
			{
				return this._Trigliceridos;
			}
			set
			{
				if ((this._Trigliceridos != value))
				{
					this.OnTrigliceridosChanging(value);
					this.SendPropertyChanging();
					this._Trigliceridos = value;
					this.SendPropertyChanged("Trigliceridos");
					this.OnTrigliceridosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Colesterol", Storage="_Colesterol1", DbType="Float NOT NULL")]
		public double Colesterol1
		{
			get
			{
				return this._Colesterol1;
			}
			set
			{
				if ((this._Colesterol1 != value))
				{
					this.OnColesterol1Changing(value);
					this.SendPropertyChanging();
					this._Colesterol1 = value;
					this.SendPropertyChanged("Colesterol1");
					this.OnColesterol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Colesterol", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Colesterol.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Colesterol.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Altura")]
	public partial class Altura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private double _Altura1;
		
		private System.DateTime _Fecha;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnAltura1Changing(double value);
    partial void OnAltura1Changed();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Altura()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Altura", Storage="_Altura1", DbType="Float NOT NULL")]
		public double Altura1
		{
			get
			{
				return this._Altura1;
			}
			set
			{
				if ((this._Altura1 != value))
				{
					this.OnAltura1Changing(value);
					this.SendPropertyChanging();
					this._Altura1 = value;
					this.SendPropertyChanged("Altura1");
					this.OnAltura1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Altura", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Altura.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Altura.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactoEmergencia")]
	public partial class ContactoEmergencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private int _Tipo;
		
		private string _NombreContacto;
		
		private string _Email;
		
		private string _Telefono;
		
		private string _Dirección;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<TipoContactoEmergencia> _TipoContactoEmergencia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnTipoChanging(int value);
    partial void OnTipoChanged();
    partial void OnNombreContactoChanging(string value);
    partial void OnNombreContactoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDirecciónChanging(string value);
    partial void OnDirecciónChanged();
    #endregion
		
		public ContactoEmergencia()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			this._TipoContactoEmergencia = default(EntityRef<TipoContactoEmergencia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Int NOT NULL")]
		public int Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					if (this._TipoContactoEmergencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreContacto", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NombreContacto
		{
			get
			{
				return this._NombreContacto;
			}
			set
			{
				if ((this._NombreContacto != value))
				{
					this.OnNombreContactoChanging(value);
					this.SendPropertyChanging();
					this._NombreContacto = value;
					this.SendPropertyChanged("NombreContacto");
					this.OnNombreContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this.OnDirecciónChanging(value);
					this.SendPropertyChanging();
					this._Dirección = value;
					this.SendPropertyChanged("Dirección");
					this.OnDirecciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_ContactoEmergencia", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.ContactoEmergencia.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.ContactoEmergencia.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoContactoEmergencia_ContactoEmergencia", Storage="_TipoContactoEmergencia", ThisKey="Tipo", OtherKey="Codigo", IsForeignKey=true)]
		public TipoContactoEmergencia TipoContactoEmergencia
		{
			get
			{
				return this._TipoContactoEmergencia.Entity;
			}
			set
			{
				TipoContactoEmergencia previousValue = this._TipoContactoEmergencia.Entity;
				if (((previousValue != value) 
							|| (this._TipoContactoEmergencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoContactoEmergencia.Entity = null;
						previousValue.ContactoEmergencia.Remove(this);
					}
					this._TipoContactoEmergencia.Entity = value;
					if ((value != null))
					{
						value.ContactoEmergencia.Add(this);
						this._Tipo = value.Codigo;
					}
					else
					{
						this._Tipo = default(int);
					}
					this.SendPropertyChanged("TipoContactoEmergencia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Glucemia")]
	public partial class Glucemia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private int _Medicion;
		
		private int _Alimentacion;
		
		private System.DateTime _Fecha;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<TipoAlimentacion> _TipoAlimentacion;
		
		private EntityRef<TipoMedicacion> _TipoMedicacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnMedicionChanging(int value);
    partial void OnMedicionChanged();
    partial void OnAlimentacionChanging(int value);
    partial void OnAlimentacionChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Glucemia()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			this._TipoAlimentacion = default(EntityRef<TipoAlimentacion>);
			this._TipoMedicacion = default(EntityRef<TipoMedicacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medicion", DbType="Int NOT NULL")]
		public int Medicion
		{
			get
			{
				return this._Medicion;
			}
			set
			{
				if ((this._Medicion != value))
				{
					if (this._TipoMedicacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedicionChanging(value);
					this.SendPropertyChanging();
					this._Medicion = value;
					this.SendPropertyChanged("Medicion");
					this.OnMedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alimentacion", DbType="Int NOT NULL")]
		public int Alimentacion
		{
			get
			{
				return this._Alimentacion;
			}
			set
			{
				if ((this._Alimentacion != value))
				{
					if (this._TipoAlimentacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlimentacionChanging(value);
					this.SendPropertyChanging();
					this._Alimentacion = value;
					this.SendPropertyChanged("Alimentacion");
					this.OnAlimentacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Glucemia", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Glucemia.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Glucemia.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlimentacion_Glucemia", Storage="_TipoAlimentacion", ThisKey="Alimentacion", OtherKey="Codigo", IsForeignKey=true)]
		public TipoAlimentacion TipoAlimentacion
		{
			get
			{
				return this._TipoAlimentacion.Entity;
			}
			set
			{
				TipoAlimentacion previousValue = this._TipoAlimentacion.Entity;
				if (((previousValue != value) 
							|| (this._TipoAlimentacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAlimentacion.Entity = null;
						previousValue.Glucemia.Remove(this);
					}
					this._TipoAlimentacion.Entity = value;
					if ((value != null))
					{
						value.Glucemia.Add(this);
						this._Alimentacion = value.Codigo;
					}
					else
					{
						this._Alimentacion = default(int);
					}
					this.SendPropertyChanged("TipoAlimentacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMedicacion_Glucemia", Storage="_TipoMedicacion", ThisKey="Medicion", OtherKey="Codigo", IsForeignKey=true)]
		public TipoMedicacion TipoMedicacion
		{
			get
			{
				return this._TipoMedicacion.Entity;
			}
			set
			{
				TipoMedicacion previousValue = this._TipoMedicacion.Entity;
				if (((previousValue != value) 
							|| (this._TipoMedicacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoMedicacion.Entity = null;
						previousValue.Glucemia.Remove(this);
					}
					this._TipoMedicacion.Entity = value;
					if ((value != null))
					{
						value.Glucemia.Add(this);
						this._Medicion = value.Codigo;
					}
					else
					{
						this._Medicion = default(int);
					}
					this.SendPropertyChanged("TipoMedicacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laboratorio")]
	public partial class Laboratorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private int _Estado;
		
		private string _NombrePanelLaboratorio;
		
		private string _Solicitado;
		
		private string _Laboratorio1;
		
		private string _NumeroSecuencia;
		
		private System.DateTime _Fecha;
		
		private EntitySet<ResultadoLaboratorio> _ResultadoLaboratorio;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<TipoEstadoLaboratorio> _TipoEstadoLaboratorio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnNombrePanelLaboratorioChanging(string value);
    partial void OnNombrePanelLaboratorioChanged();
    partial void OnSolicitadoChanging(string value);
    partial void OnSolicitadoChanged();
    partial void OnLaboratorio1Changing(string value);
    partial void OnLaboratorio1Changed();
    partial void OnNumeroSecuenciaChanging(string value);
    partial void OnNumeroSecuenciaChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Laboratorio()
		{
			this._ResultadoLaboratorio = new EntitySet<ResultadoLaboratorio>(new Action<ResultadoLaboratorio>(this.attach_ResultadoLaboratorio), new Action<ResultadoLaboratorio>(this.detach_ResultadoLaboratorio));
			this._Paciente1 = default(EntityRef<Paciente>);
			this._TipoEstadoLaboratorio = default(EntityRef<TipoEstadoLaboratorio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._TipoEstadoLaboratorio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombrePanelLaboratorio", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NombrePanelLaboratorio
		{
			get
			{
				return this._NombrePanelLaboratorio;
			}
			set
			{
				if ((this._NombrePanelLaboratorio != value))
				{
					this.OnNombrePanelLaboratorioChanging(value);
					this.SendPropertyChanging();
					this._NombrePanelLaboratorio = value;
					this.SendPropertyChanged("NombrePanelLaboratorio");
					this.OnNombrePanelLaboratorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solicitado", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Solicitado
		{
			get
			{
				return this._Solicitado;
			}
			set
			{
				if ((this._Solicitado != value))
				{
					this.OnSolicitadoChanging(value);
					this.SendPropertyChanging();
					this._Solicitado = value;
					this.SendPropertyChanged("Solicitado");
					this.OnSolicitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Laboratorio", Storage="_Laboratorio1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Laboratorio1
		{
			get
			{
				return this._Laboratorio1;
			}
			set
			{
				if ((this._Laboratorio1 != value))
				{
					this.OnLaboratorio1Changing(value);
					this.SendPropertyChanging();
					this._Laboratorio1 = value;
					this.SendPropertyChanged("Laboratorio1");
					this.OnLaboratorio1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSecuencia", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NumeroSecuencia
		{
			get
			{
				return this._NumeroSecuencia;
			}
			set
			{
				if ((this._NumeroSecuencia != value))
				{
					this.OnNumeroSecuenciaChanging(value);
					this.SendPropertyChanging();
					this._NumeroSecuencia = value;
					this.SendPropertyChanged("NumeroSecuencia");
					this.OnNumeroSecuenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laboratorio_ResultadoLaboratorio", Storage="_ResultadoLaboratorio", ThisKey="Codigo", OtherKey="Laboratorio")]
		public EntitySet<ResultadoLaboratorio> ResultadoLaboratorio
		{
			get
			{
				return this._ResultadoLaboratorio;
			}
			set
			{
				this._ResultadoLaboratorio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Laboratorio", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Laboratorio.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Laboratorio.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoLaboratorio_Laboratorio", Storage="_TipoEstadoLaboratorio", ThisKey="Estado", OtherKey="Codigo", IsForeignKey=true)]
		public TipoEstadoLaboratorio TipoEstadoLaboratorio
		{
			get
			{
				return this._TipoEstadoLaboratorio.Entity;
			}
			set
			{
				TipoEstadoLaboratorio previousValue = this._TipoEstadoLaboratorio.Entity;
				if (((previousValue != value) 
							|| (this._TipoEstadoLaboratorio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEstadoLaboratorio.Entity = null;
						previousValue.Laboratorio.Remove(this);
					}
					this._TipoEstadoLaboratorio.Entity = value;
					if ((value != null))
					{
						value.Laboratorio.Add(this);
						this._Estado = value.Codigo;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("TipoEstadoLaboratorio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResultadoLaboratorio(ResultadoLaboratorio entity)
		{
			this.SendPropertyChanging();
			entity.Laboratorio1 = this;
		}
		
		private void detach_ResultadoLaboratorio(ResultadoLaboratorio entity)
		{
			this.SendPropertyChanging();
			entity.Laboratorio1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicamento")]
	public partial class Medicamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private int _Concentracion;
		
		private int _Dosis;
		
		private int _Administracion;
		
		private string _Nombre;
		
		private string _Frecuencia;
		
		private string _Motivo;
		
		private System.DateTime _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private string _Detalle;
		
		private EntityRef<TipoAdministracion> _TipoAdministracion;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<TipoConcentracion> _TipoConcentracion;
		
		private EntityRef<TipoDosis> _TipoDosis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnConcentracionChanging(int value);
    partial void OnConcentracionChanged();
    partial void OnDosisChanging(int value);
    partial void OnDosisChanged();
    partial void OnAdministracionChanging(int value);
    partial void OnAdministracionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFrecuenciaChanging(string value);
    partial void OnFrecuenciaChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Medicamento()
		{
			this._TipoAdministracion = default(EntityRef<TipoAdministracion>);
			this._Paciente1 = default(EntityRef<Paciente>);
			this._TipoConcentracion = default(EntityRef<TipoConcentracion>);
			this._TipoDosis = default(EntityRef<TipoDosis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concentracion", DbType="Int NOT NULL")]
		public int Concentracion
		{
			get
			{
				return this._Concentracion;
			}
			set
			{
				if ((this._Concentracion != value))
				{
					if (this._TipoConcentracion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConcentracionChanging(value);
					this.SendPropertyChanging();
					this._Concentracion = value;
					this.SendPropertyChanged("Concentracion");
					this.OnConcentracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dosis", DbType="Int NOT NULL")]
		public int Dosis
		{
			get
			{
				return this._Dosis;
			}
			set
			{
				if ((this._Dosis != value))
				{
					if (this._TipoDosis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDosisChanging(value);
					this.SendPropertyChanging();
					this._Dosis = value;
					this.SendPropertyChanged("Dosis");
					this.OnDosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administracion", DbType="Int NOT NULL")]
		public int Administracion
		{
			get
			{
				return this._Administracion;
			}
			set
			{
				if ((this._Administracion != value))
				{
					if (this._TipoAdministracion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdministracionChanging(value);
					this.SendPropertyChanging();
					this._Administracion = value;
					this.SendPropertyChanged("Administracion");
					this.OnAdministracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frecuencia", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Frecuencia
		{
			get
			{
				return this._Frecuencia;
			}
			set
			{
				if ((this._Frecuencia != value))
				{
					this.OnFrecuenciaChanging(value);
					this.SendPropertyChanging();
					this._Frecuencia = value;
					this.SendPropertyChanged("Frecuencia");
					this.OnFrecuenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="Date NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="Date")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAdministracion_Medicamento", Storage="_TipoAdministracion", ThisKey="Administracion", OtherKey="Codigo", IsForeignKey=true)]
		public TipoAdministracion TipoAdministracion
		{
			get
			{
				return this._TipoAdministracion.Entity;
			}
			set
			{
				TipoAdministracion previousValue = this._TipoAdministracion.Entity;
				if (((previousValue != value) 
							|| (this._TipoAdministracion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAdministracion.Entity = null;
						previousValue.Medicamento.Remove(this);
					}
					this._TipoAdministracion.Entity = value;
					if ((value != null))
					{
						value.Medicamento.Add(this);
						this._Administracion = value.Codigo;
					}
					else
					{
						this._Administracion = default(int);
					}
					this.SendPropertyChanged("TipoAdministracion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Medicamento", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Medicamento.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Medicamento.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoConcentracion_Medicamento", Storage="_TipoConcentracion", ThisKey="Concentracion", OtherKey="Codigo", IsForeignKey=true)]
		public TipoConcentracion TipoConcentracion
		{
			get
			{
				return this._TipoConcentracion.Entity;
			}
			set
			{
				TipoConcentracion previousValue = this._TipoConcentracion.Entity;
				if (((previousValue != value) 
							|| (this._TipoConcentracion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoConcentracion.Entity = null;
						previousValue.Medicamento.Remove(this);
					}
					this._TipoConcentracion.Entity = value;
					if ((value != null))
					{
						value.Medicamento.Add(this);
						this._Concentracion = value.Codigo;
					}
					else
					{
						this._Concentracion = default(int);
					}
					this.SendPropertyChanged("TipoConcentracion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDosis_Medicamento", Storage="_TipoDosis", ThisKey="Dosis", OtherKey="Codigo", IsForeignKey=true)]
		public TipoDosis TipoDosis
		{
			get
			{
				return this._TipoDosis.Entity;
			}
			set
			{
				TipoDosis previousValue = this._TipoDosis.Entity;
				if (((previousValue != value) 
							|| (this._TipoDosis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDosis.Entity = null;
						previousValue.Medicamento.Remove(this);
					}
					this._TipoDosis.Entity = value;
					if ((value != null))
					{
						value.Medicamento.Add(this);
						this._Dosis = value.Codigo;
					}
					else
					{
						this._Dosis = default(int);
					}
					this.SendPropertyChanged("TipoDosis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paciente")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Email;
		
		private string _Nombre;
		
		private string _Apellido1;
		
		private string _Apellido2;
		
		private bool _Sexo;
		
		private System.Nullable<System.DateTime> _TipoSangre;
		
		private EntitySet<Alergia> _Alergia;
		
		private EntitySet<Afeccion> _Afeccion;
		
		private EntitySet<Colesterol> _Colesterol;
		
		private EntitySet<Altura> _Altura;
		
		private EntitySet<ContactoEmergencia> _ContactoEmergencia;
		
		private EntitySet<Glucemia> _Glucemia;
		
		private EntitySet<Laboratorio> _Laboratorio;
		
		private EntitySet<Medicamento> _Medicamento;
		
		private EntitySet<Peso> _Peso;
		
		private EntitySet<PresionArterial> _PresionArterial;
		
		private EntitySet<Procedimiento> _Procedimiento;
		
		private EntitySet<Seguro> _Seguro;
		
		private EntitySet<Vacuna> _Vacuna;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellido1Changing(string value);
    partial void OnApellido1Changed();
    partial void OnApellido2Changing(string value);
    partial void OnApellido2Changed();
    partial void OnSexoChanging(bool value);
    partial void OnSexoChanged();
    partial void OnTipoSangreChanging(System.Nullable<System.DateTime> value);
    partial void OnTipoSangreChanged();
    #endregion
		
		public Paciente()
		{
			this._Alergia = new EntitySet<Alergia>(new Action<Alergia>(this.attach_Alergia), new Action<Alergia>(this.detach_Alergia));
			this._Afeccion = new EntitySet<Afeccion>(new Action<Afeccion>(this.attach_Afeccion), new Action<Afeccion>(this.detach_Afeccion));
			this._Colesterol = new EntitySet<Colesterol>(new Action<Colesterol>(this.attach_Colesterol), new Action<Colesterol>(this.detach_Colesterol));
			this._Altura = new EntitySet<Altura>(new Action<Altura>(this.attach_Altura), new Action<Altura>(this.detach_Altura));
			this._ContactoEmergencia = new EntitySet<ContactoEmergencia>(new Action<ContactoEmergencia>(this.attach_ContactoEmergencia), new Action<ContactoEmergencia>(this.detach_ContactoEmergencia));
			this._Glucemia = new EntitySet<Glucemia>(new Action<Glucemia>(this.attach_Glucemia), new Action<Glucemia>(this.detach_Glucemia));
			this._Laboratorio = new EntitySet<Laboratorio>(new Action<Laboratorio>(this.attach_Laboratorio), new Action<Laboratorio>(this.detach_Laboratorio));
			this._Medicamento = new EntitySet<Medicamento>(new Action<Medicamento>(this.attach_Medicamento), new Action<Medicamento>(this.detach_Medicamento));
			this._Peso = new EntitySet<Peso>(new Action<Peso>(this.attach_Peso), new Action<Peso>(this.detach_Peso));
			this._PresionArterial = new EntitySet<PresionArterial>(new Action<PresionArterial>(this.attach_PresionArterial), new Action<PresionArterial>(this.detach_PresionArterial));
			this._Procedimiento = new EntitySet<Procedimiento>(new Action<Procedimiento>(this.attach_Procedimiento), new Action<Procedimiento>(this.detach_Procedimiento));
			this._Seguro = new EntitySet<Seguro>(new Action<Seguro>(this.attach_Seguro), new Action<Seguro>(this.detach_Seguro));
			this._Vacuna = new EntitySet<Vacuna>(new Action<Vacuna>(this.attach_Vacuna), new Action<Vacuna>(this.detach_Vacuna));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido1
		{
			get
			{
				return this._Apellido1;
			}
			set
			{
				if ((this._Apellido1 != value))
				{
					this.OnApellido1Changing(value);
					this.SendPropertyChanging();
					this._Apellido1 = value;
					this.SendPropertyChanged("Apellido1");
					this.OnApellido1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido2", DbType="NVarChar(50)")]
		public string Apellido2
		{
			get
			{
				return this._Apellido2;
			}
			set
			{
				if ((this._Apellido2 != value))
				{
					this.OnApellido2Changing(value);
					this.SendPropertyChanging();
					this._Apellido2 = value;
					this.SendPropertyChanged("Apellido2");
					this.OnApellido2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Bit NOT NULL")]
		public bool Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoSangre", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TipoSangre
		{
			get
			{
				return this._TipoSangre;
			}
			set
			{
				if ((this._TipoSangre != value))
				{
					this.OnTipoSangreChanging(value);
					this.SendPropertyChanging();
					this._TipoSangre = value;
					this.SendPropertyChanged("TipoSangre");
					this.OnTipoSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Alergia", Storage="_Alergia", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Alergia> Alergia
		{
			get
			{
				return this._Alergia;
			}
			set
			{
				this._Alergia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Afeccion", Storage="_Afeccion", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Afeccion> Afeccion
		{
			get
			{
				return this._Afeccion;
			}
			set
			{
				this._Afeccion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Colesterol", Storage="_Colesterol", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Colesterol> Colesterol
		{
			get
			{
				return this._Colesterol;
			}
			set
			{
				this._Colesterol.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Altura", Storage="_Altura", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Altura> Altura
		{
			get
			{
				return this._Altura;
			}
			set
			{
				this._Altura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_ContactoEmergencia", Storage="_ContactoEmergencia", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<ContactoEmergencia> ContactoEmergencia
		{
			get
			{
				return this._ContactoEmergencia;
			}
			set
			{
				this._ContactoEmergencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Glucemia", Storage="_Glucemia", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Glucemia> Glucemia
		{
			get
			{
				return this._Glucemia;
			}
			set
			{
				this._Glucemia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Laboratorio", Storage="_Laboratorio", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Laboratorio> Laboratorio
		{
			get
			{
				return this._Laboratorio;
			}
			set
			{
				this._Laboratorio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Medicamento", Storage="_Medicamento", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Medicamento> Medicamento
		{
			get
			{
				return this._Medicamento;
			}
			set
			{
				this._Medicamento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Peso", Storage="_Peso", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Peso> Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				this._Peso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_PresionArterial", Storage="_PresionArterial", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<PresionArterial> PresionArterial
		{
			get
			{
				return this._PresionArterial;
			}
			set
			{
				this._PresionArterial.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Procedimiento", Storage="_Procedimiento", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Procedimiento> Procedimiento
		{
			get
			{
				return this._Procedimiento;
			}
			set
			{
				this._Procedimiento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Seguro", Storage="_Seguro", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Seguro> Seguro
		{
			get
			{
				return this._Seguro;
			}
			set
			{
				this._Seguro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Vacuna", Storage="_Vacuna", ThisKey="Email", OtherKey="Paciente")]
		public EntitySet<Vacuna> Vacuna
		{
			get
			{
				return this._Vacuna;
			}
			set
			{
				this._Vacuna.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alergia(Alergia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Alergia(Alergia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Afeccion(Afeccion entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Afeccion(Afeccion entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Colesterol(Colesterol entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Colesterol(Colesterol entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Altura(Altura entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Altura(Altura entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_ContactoEmergencia(ContactoEmergencia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_ContactoEmergencia(ContactoEmergencia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Glucemia(Glucemia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Glucemia(Glucemia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Laboratorio(Laboratorio entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Laboratorio(Laboratorio entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Peso(Peso entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Peso(Peso entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_PresionArterial(PresionArterial entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_PresionArterial(PresionArterial entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Procedimiento(Procedimiento entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Procedimiento(Procedimiento entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Seguro(Seguro entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Seguro(Seguro entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Vacuna(Vacuna entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Vacuna(Vacuna entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Peso")]
	public partial class Peso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private double _Peso1;
		
		private System.DateTime _Fecha;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnPeso1Changing(double value);
    partial void OnPeso1Changed();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Peso()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Peso", Storage="_Peso1", DbType="Float NOT NULL")]
		public double Peso1
		{
			get
			{
				return this._Peso1;
			}
			set
			{
				if ((this._Peso1 != value))
				{
					this.OnPeso1Changing(value);
					this.SendPropertyChanging();
					this._Peso1 = value;
					this.SendPropertyChanged("Peso1");
					this.OnPeso1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Peso", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Peso.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Peso.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PresionArterial")]
	public partial class PresionArterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private double _Sistolica;
		
		private double _Diastolica;
		
		private double _Pulso;
		
		private bool _RitmoIrregular;
		
		private System.DateTime _Fecha;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnSistolicaChanging(double value);
    partial void OnSistolicaChanged();
    partial void OnDiastolicaChanging(double value);
    partial void OnDiastolicaChanged();
    partial void OnPulsoChanging(double value);
    partial void OnPulsoChanged();
    partial void OnRitmoIrregularChanging(bool value);
    partial void OnRitmoIrregularChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public PresionArterial()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sistolica", DbType="Float NOT NULL")]
		public double Sistolica
		{
			get
			{
				return this._Sistolica;
			}
			set
			{
				if ((this._Sistolica != value))
				{
					this.OnSistolicaChanging(value);
					this.SendPropertyChanging();
					this._Sistolica = value;
					this.SendPropertyChanged("Sistolica");
					this.OnSistolicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diastolica", DbType="Float NOT NULL")]
		public double Diastolica
		{
			get
			{
				return this._Diastolica;
			}
			set
			{
				if ((this._Diastolica != value))
				{
					this.OnDiastolicaChanging(value);
					this.SendPropertyChanging();
					this._Diastolica = value;
					this.SendPropertyChanged("Diastolica");
					this.OnDiastolicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pulso", DbType="Float NOT NULL")]
		public double Pulso
		{
			get
			{
				return this._Pulso;
			}
			set
			{
				if ((this._Pulso != value))
				{
					this.OnPulsoChanging(value);
					this.SendPropertyChanging();
					this._Pulso = value;
					this.SendPropertyChanged("Pulso");
					this.OnPulsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RitmoIrregular", DbType="Bit NOT NULL")]
		public bool RitmoIrregular
		{
			get
			{
				return this._RitmoIrregular;
			}
			set
			{
				if ((this._RitmoIrregular != value))
				{
					this.OnRitmoIrregularChanging(value);
					this.SendPropertyChanging();
					this._RitmoIrregular = value;
					this.SendPropertyChanged("RitmoIrregular");
					this.OnRitmoIrregularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_PresionArterial", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.PresionArterial.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.PresionArterial.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Procedimiento")]
	public partial class Procedimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private string _Procedimiento1;
		
		private string _UbicacionAnatomica;
		
		private string _Motivo;
		
		private System.DateTime _Fecha;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnProcedimiento1Changing(string value);
    partial void OnProcedimiento1Changed();
    partial void OnUbicacionAnatomicaChanging(string value);
    partial void OnUbicacionAnatomicaChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Procedimiento()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Procedimiento", Storage="_Procedimiento1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Procedimiento1
		{
			get
			{
				return this._Procedimiento1;
			}
			set
			{
				if ((this._Procedimiento1 != value))
				{
					this.OnProcedimiento1Changing(value);
					this.SendPropertyChanging();
					this._Procedimiento1 = value;
					this.SendPropertyChanged("Procedimiento1");
					this.OnProcedimiento1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UbicacionAnatomica", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string UbicacionAnatomica
		{
			get
			{
				return this._UbicacionAnatomica;
			}
			set
			{
				if ((this._UbicacionAnatomica != value))
				{
					this.OnUbicacionAnatomicaChanging(value);
					this.SendPropertyChanging();
					this._UbicacionAnatomica = value;
					this.SendPropertyChanged("UbicacionAnatomica");
					this.OnUbicacionAnatomicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Procedimiento", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Procedimiento.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Procedimiento.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultadoLaboratorio")]
	public partial class ResultadoLaboratorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private long _Laboratorio;
		
		private int _Marca;
		
		private string _Nombre;
		
		private string _Valor;
		
		private string _Unidad;
		
		private EntityRef<Laboratorio> _Laboratorio1;
		
		private EntityRef<TipoMarca> _TipoMarca;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnLaboratorioChanging(long value);
    partial void OnLaboratorioChanged();
    partial void OnMarcaChanging(int value);
    partial void OnMarcaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    partial void OnUnidadChanging(string value);
    partial void OnUnidadChanged();
    #endregion
		
		public ResultadoLaboratorio()
		{
			this._Laboratorio1 = default(EntityRef<Laboratorio>);
			this._TipoMarca = default(EntityRef<TipoMarca>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Laboratorio", DbType="BigInt NOT NULL")]
		public long Laboratorio
		{
			get
			{
				return this._Laboratorio;
			}
			set
			{
				if ((this._Laboratorio != value))
				{
					if (this._Laboratorio1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLaboratorioChanging(value);
					this.SendPropertyChanging();
					this._Laboratorio = value;
					this.SendPropertyChanged("Laboratorio");
					this.OnLaboratorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="Int NOT NULL")]
		public int Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					if (this._TipoMarca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unidad", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Unidad
		{
			get
			{
				return this._Unidad;
			}
			set
			{
				if ((this._Unidad != value))
				{
					this.OnUnidadChanging(value);
					this.SendPropertyChanging();
					this._Unidad = value;
					this.SendPropertyChanged("Unidad");
					this.OnUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laboratorio_ResultadoLaboratorio", Storage="_Laboratorio1", ThisKey="Laboratorio", OtherKey="Codigo", IsForeignKey=true)]
		public Laboratorio Laboratorio1
		{
			get
			{
				return this._Laboratorio1.Entity;
			}
			set
			{
				Laboratorio previousValue = this._Laboratorio1.Entity;
				if (((previousValue != value) 
							|| (this._Laboratorio1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Laboratorio1.Entity = null;
						previousValue.ResultadoLaboratorio.Remove(this);
					}
					this._Laboratorio1.Entity = value;
					if ((value != null))
					{
						value.ResultadoLaboratorio.Add(this);
						this._Laboratorio = value.Codigo;
					}
					else
					{
						this._Laboratorio = default(long);
					}
					this.SendPropertyChanged("Laboratorio1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMarca_ResultadoLaboratorio", Storage="_TipoMarca", ThisKey="Marca", OtherKey="Codigo", IsForeignKey=true)]
		public TipoMarca TipoMarca
		{
			get
			{
				return this._TipoMarca.Entity;
			}
			set
			{
				TipoMarca previousValue = this._TipoMarca.Entity;
				if (((previousValue != value) 
							|| (this._TipoMarca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoMarca.Entity = null;
						previousValue.ResultadoLaboratorio.Remove(this);
					}
					this._TipoMarca.Entity = value;
					if ((value != null))
					{
						value.ResultadoLaboratorio.Add(this);
						this._Marca = value.Codigo;
					}
					else
					{
						this._Marca = default(int);
					}
					this.SendPropertyChanged("TipoMarca");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seguro")]
	public partial class Seguro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private int _Cobertura;
		
		private bool _Principal;
		
		private string _IdentificadorAbonado;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private string _Detalle;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<TipoCobertura> _TipoCobertura;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnCoberturaChanging(int value);
    partial void OnCoberturaChanged();
    partial void OnPrincipalChanging(bool value);
    partial void OnPrincipalChanged();
    partial void OnIdentificadorAbonadoChanging(string value);
    partial void OnIdentificadorAbonadoChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Seguro()
		{
			this._Paciente1 = default(EntityRef<Paciente>);
			this._TipoCobertura = default(EntityRef<TipoCobertura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cobertura", DbType="Int NOT NULL")]
		public int Cobertura
		{
			get
			{
				return this._Cobertura;
			}
			set
			{
				if ((this._Cobertura != value))
				{
					if (this._TipoCobertura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoberturaChanging(value);
					this.SendPropertyChanging();
					this._Cobertura = value;
					this.SendPropertyChanged("Cobertura");
					this.OnCoberturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Principal", DbType="Bit NOT NULL")]
		public bool Principal
		{
			get
			{
				return this._Principal;
			}
			set
			{
				if ((this._Principal != value))
				{
					this.OnPrincipalChanging(value);
					this.SendPropertyChanging();
					this._Principal = value;
					this.SendPropertyChanged("Principal");
					this.OnPrincipalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificadorAbonado", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string IdentificadorAbonado
		{
			get
			{
				return this._IdentificadorAbonado;
			}
			set
			{
				if ((this._IdentificadorAbonado != value))
				{
					this.OnIdentificadorAbonadoChanging(value);
					this.SendPropertyChanging();
					this._IdentificadorAbonado = value;
					this.SendPropertyChanged("IdentificadorAbonado");
					this.OnIdentificadorAbonadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="Date")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="Date")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Seguro", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Seguro.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Seguro.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCobertura_Seguro", Storage="_TipoCobertura", ThisKey="Cobertura", OtherKey="Codigo", IsForeignKey=true)]
		public TipoCobertura TipoCobertura
		{
			get
			{
				return this._TipoCobertura.Entity;
			}
			set
			{
				TipoCobertura previousValue = this._TipoCobertura.Entity;
				if (((previousValue != value) 
							|| (this._TipoCobertura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoCobertura.Entity = null;
						previousValue.Seguro.Remove(this);
					}
					this._TipoCobertura.Entity = value;
					if ((value != null))
					{
						value.Seguro.Add(this);
						this._Cobertura = value.Codigo;
					}
					else
					{
						this._Cobertura = default(int);
					}
					this.SendPropertyChanged("TipoCobertura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoAdministracionVacuna")]
	public partial class TipoAdministracionVacuna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Vacuna> _Vacuna;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoAdministracionVacuna()
		{
			this._Vacuna = new EntitySet<Vacuna>(new Action<Vacuna>(this.attach_Vacuna), new Action<Vacuna>(this.detach_Vacuna));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAdministracionVacuna_Vacuna", Storage="_Vacuna", ThisKey="Codigo", OtherKey="Administracion")]
		public EntitySet<Vacuna> Vacuna
		{
			get
			{
				return this._Vacuna;
			}
			set
			{
				this._Vacuna.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vacuna(Vacuna entity)
		{
			this.SendPropertyChanging();
			entity.TipoAdministracionVacuna = this;
		}
		
		private void detach_Vacuna(Vacuna entity)
		{
			this.SendPropertyChanging();
			entity.TipoAdministracionVacuna = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoAlergia")]
	public partial class TipoAlergia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Alergia> _Alergia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoAlergia()
		{
			this._Alergia = new EntitySet<Alergia>(new Action<Alergia>(this.attach_Alergia), new Action<Alergia>(this.detach_Alergia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlergia_Alergia", Storage="_Alergia", ThisKey="Codigo", OtherKey="Tipo")]
		public EntitySet<Alergia> Alergia
		{
			get
			{
				return this._Alergia;
			}
			set
			{
				this._Alergia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alergia(Alergia entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlergia = this;
		}
		
		private void detach_Alergia(Alergia entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlergia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoAlimentacion")]
	public partial class TipoAlimentacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Glucemia> _Glucemia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoAlimentacion()
		{
			this._Glucemia = new EntitySet<Glucemia>(new Action<Glucemia>(this.attach_Glucemia), new Action<Glucemia>(this.detach_Glucemia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlimentacion_Glucemia", Storage="_Glucemia", ThisKey="Codigo", OtherKey="Alimentacion")]
		public EntitySet<Glucemia> Glucemia
		{
			get
			{
				return this._Glucemia;
			}
			set
			{
				this._Glucemia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Glucemia(Glucemia entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlimentacion = this;
		}
		
		private void detach_Glucemia(Glucemia entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlimentacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoCobertura")]
	public partial class TipoCobertura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Seguro> _Seguro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoCobertura()
		{
			this._Seguro = new EntitySet<Seguro>(new Action<Seguro>(this.attach_Seguro), new Action<Seguro>(this.detach_Seguro));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCobertura_Seguro", Storage="_Seguro", ThisKey="Codigo", OtherKey="Cobertura")]
		public EntitySet<Seguro> Seguro
		{
			get
			{
				return this._Seguro;
			}
			set
			{
				this._Seguro.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Seguro(Seguro entity)
		{
			this.SendPropertyChanging();
			entity.TipoCobertura = this;
		}
		
		private void detach_Seguro(Seguro entity)
		{
			this.SendPropertyChanging();
			entity.TipoCobertura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoConcentracion")]
	public partial class TipoConcentracion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Medicamento> _Medicamento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoConcentracion()
		{
			this._Medicamento = new EntitySet<Medicamento>(new Action<Medicamento>(this.attach_Medicamento), new Action<Medicamento>(this.detach_Medicamento));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoConcentracion_Medicamento", Storage="_Medicamento", ThisKey="Codigo", OtherKey="Concentracion")]
		public EntitySet<Medicamento> Medicamento
		{
			get
			{
				return this._Medicamento;
			}
			set
			{
				this._Medicamento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.TipoConcentracion = this;
		}
		
		private void detach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.TipoConcentracion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoContactoEmergencia")]
	public partial class TipoContactoEmergencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<ContactoEmergencia> _ContactoEmergencia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoContactoEmergencia()
		{
			this._ContactoEmergencia = new EntitySet<ContactoEmergencia>(new Action<ContactoEmergencia>(this.attach_ContactoEmergencia), new Action<ContactoEmergencia>(this.detach_ContactoEmergencia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoContactoEmergencia_ContactoEmergencia", Storage="_ContactoEmergencia", ThisKey="Codigo", OtherKey="Tipo")]
		public EntitySet<ContactoEmergencia> ContactoEmergencia
		{
			get
			{
				return this._ContactoEmergencia;
			}
			set
			{
				this._ContactoEmergencia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactoEmergencia(ContactoEmergencia entity)
		{
			this.SendPropertyChanging();
			entity.TipoContactoEmergencia = this;
		}
		
		private void detach_ContactoEmergencia(ContactoEmergencia entity)
		{
			this.SendPropertyChanging();
			entity.TipoContactoEmergencia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoDosis")]
	public partial class TipoDosis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Medicamento> _Medicamento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoDosis()
		{
			this._Medicamento = new EntitySet<Medicamento>(new Action<Medicamento>(this.attach_Medicamento), new Action<Medicamento>(this.detach_Medicamento));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDosis_Medicamento", Storage="_Medicamento", ThisKey="Codigo", OtherKey="Dosis")]
		public EntitySet<Medicamento> Medicamento
		{
			get
			{
				return this._Medicamento;
			}
			set
			{
				this._Medicamento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.TipoDosis = this;
		}
		
		private void detach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.TipoDosis = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoEstadoLaboratorio")]
	public partial class TipoEstadoLaboratorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Laboratorio> _Laboratorio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoEstadoLaboratorio()
		{
			this._Laboratorio = new EntitySet<Laboratorio>(new Action<Laboratorio>(this.attach_Laboratorio), new Action<Laboratorio>(this.detach_Laboratorio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoLaboratorio_Laboratorio", Storage="_Laboratorio", ThisKey="Codigo", OtherKey="Estado")]
		public EntitySet<Laboratorio> Laboratorio
		{
			get
			{
				return this._Laboratorio;
			}
			set
			{
				this._Laboratorio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Laboratorio(Laboratorio entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoLaboratorio = this;
		}
		
		private void detach_Laboratorio(Laboratorio entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoLaboratorio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoEstadoAfeccion")]
	public partial class TipoEstadoAfeccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Afeccion> _Afeccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoEstadoAfeccion()
		{
			this._Afeccion = new EntitySet<Afeccion>(new Action<Afeccion>(this.attach_Afeccion), new Action<Afeccion>(this.detach_Afeccion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoAfeccion_Afeccion", Storage="_Afeccion", ThisKey="Codigo", OtherKey="Estado")]
		public EntitySet<Afeccion> Afeccion
		{
			get
			{
				return this._Afeccion;
			}
			set
			{
				this._Afeccion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Afeccion(Afeccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoAfeccion = this;
		}
		
		private void detach_Afeccion(Afeccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoAfeccion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoMedicacion")]
	public partial class TipoMedicacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Glucemia> _Glucemia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoMedicacion()
		{
			this._Glucemia = new EntitySet<Glucemia>(new Action<Glucemia>(this.attach_Glucemia), new Action<Glucemia>(this.detach_Glucemia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMedicacion_Glucemia", Storage="_Glucemia", ThisKey="Codigo", OtherKey="Medicion")]
		public EntitySet<Glucemia> Glucemia
		{
			get
			{
				return this._Glucemia;
			}
			set
			{
				this._Glucemia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Glucemia(Glucemia entity)
		{
			this.SendPropertyChanging();
			entity.TipoMedicacion = this;
		}
		
		private void detach_Glucemia(Glucemia entity)
		{
			this.SendPropertyChanging();
			entity.TipoMedicacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoMarca")]
	public partial class TipoMarca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<ResultadoLaboratorio> _ResultadoLaboratorio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoMarca()
		{
			this._ResultadoLaboratorio = new EntitySet<ResultadoLaboratorio>(new Action<ResultadoLaboratorio>(this.attach_ResultadoLaboratorio), new Action<ResultadoLaboratorio>(this.detach_ResultadoLaboratorio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMarca_ResultadoLaboratorio", Storage="_ResultadoLaboratorio", ThisKey="Codigo", OtherKey="Marca")]
		public EntitySet<ResultadoLaboratorio> ResultadoLaboratorio
		{
			get
			{
				return this._ResultadoLaboratorio;
			}
			set
			{
				this._ResultadoLaboratorio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResultadoLaboratorio(ResultadoLaboratorio entity)
		{
			this.SendPropertyChanging();
			entity.TipoMarca = this;
		}
		
		private void detach_ResultadoLaboratorio(ResultadoLaboratorio entity)
		{
			this.SendPropertyChanging();
			entity.TipoMarca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoReacción")]
	public partial class TipoReacción : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<Alergia> _Alergia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoReacción()
		{
			this._Alergia = new EntitySet<Alergia>(new Action<Alergia>(this.attach_Alergia), new Action<Alergia>(this.detach_Alergia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoReacción_Alergia", Storage="_Alergia", ThisKey="Codigo", OtherKey="Reaccion")]
		public EntitySet<Alergia> Alergia
		{
			get
			{
				return this._Alergia;
			}
			set
			{
				this._Alergia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alergia(Alergia entity)
		{
			this.SendPropertyChanging();
			entity.TipoReacción = this;
		}
		
		private void detach_Alergia(Alergia entity)
		{
			this.SendPropertyChanging();
			entity.TipoReacción = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vacuna")]
	public partial class Vacuna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Codigo;
		
		private string _Paciente;
		
		private string _Nombre;
		
		private System.DateTime _FechaRecepcion;
		
		private int _Administracion;
		
		private string _NumeroSecuencia;
		
		private string _EfectoSecundarios;
		
		private string _ParteCuerpo;
		
		private string _Detalle;
		
		private EntityRef<TipoAdministracionVacuna> _TipoAdministracionVacuna;
		
		private EntityRef<Paciente> _Paciente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(long value);
    partial void OnCodigoChanged();
    partial void OnPacienteChanging(string value);
    partial void OnPacienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaRecepcionChanging(System.DateTime value);
    partial void OnFechaRecepcionChanged();
    partial void OnAdministracionChanging(int value);
    partial void OnAdministracionChanged();
    partial void OnNumeroSecuenciaChanging(string value);
    partial void OnNumeroSecuenciaChanged();
    partial void OnEfectoSecundariosChanging(string value);
    partial void OnEfectoSecundariosChanged();
    partial void OnParteCuerpoChanging(string value);
    partial void OnParteCuerpoChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Vacuna()
		{
			this._TipoAdministracionVacuna = default(EntityRef<TipoAdministracionVacuna>);
			this._Paciente1 = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteChanging(value);
					this.SendPropertyChanging();
					this._Paciente = value;
					this.SendPropertyChanged("Paciente");
					this.OnPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRecepcion", DbType="Date NOT NULL")]
		public System.DateTime FechaRecepcion
		{
			get
			{
				return this._FechaRecepcion;
			}
			set
			{
				if ((this._FechaRecepcion != value))
				{
					this.OnFechaRecepcionChanging(value);
					this.SendPropertyChanging();
					this._FechaRecepcion = value;
					this.SendPropertyChanged("FechaRecepcion");
					this.OnFechaRecepcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administracion", DbType="Int NOT NULL")]
		public int Administracion
		{
			get
			{
				return this._Administracion;
			}
			set
			{
				if ((this._Administracion != value))
				{
					if (this._TipoAdministracionVacuna.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdministracionChanging(value);
					this.SendPropertyChanging();
					this._Administracion = value;
					this.SendPropertyChanged("Administracion");
					this.OnAdministracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSecuencia", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NumeroSecuencia
		{
			get
			{
				return this._NumeroSecuencia;
			}
			set
			{
				if ((this._NumeroSecuencia != value))
				{
					this.OnNumeroSecuenciaChanging(value);
					this.SendPropertyChanging();
					this._NumeroSecuencia = value;
					this.SendPropertyChanged("NumeroSecuencia");
					this.OnNumeroSecuenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EfectoSecundarios", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EfectoSecundarios
		{
			get
			{
				return this._EfectoSecundarios;
			}
			set
			{
				if ((this._EfectoSecundarios != value))
				{
					this.OnEfectoSecundariosChanging(value);
					this.SendPropertyChanging();
					this._EfectoSecundarios = value;
					this.SendPropertyChanged("EfectoSecundarios");
					this.OnEfectoSecundariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParteCuerpo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ParteCuerpo
		{
			get
			{
				return this._ParteCuerpo;
			}
			set
			{
				if ((this._ParteCuerpo != value))
				{
					this.OnParteCuerpoChanging(value);
					this.SendPropertyChanging();
					this._ParteCuerpo = value;
					this.SendPropertyChanged("ParteCuerpo");
					this.OnParteCuerpoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAdministracionVacuna_Vacuna", Storage="_TipoAdministracionVacuna", ThisKey="Administracion", OtherKey="Codigo", IsForeignKey=true)]
		public TipoAdministracionVacuna TipoAdministracionVacuna
		{
			get
			{
				return this._TipoAdministracionVacuna.Entity;
			}
			set
			{
				TipoAdministracionVacuna previousValue = this._TipoAdministracionVacuna.Entity;
				if (((previousValue != value) 
							|| (this._TipoAdministracionVacuna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAdministracionVacuna.Entity = null;
						previousValue.Vacuna.Remove(this);
					}
					this._TipoAdministracionVacuna.Entity = value;
					if ((value != null))
					{
						value.Vacuna.Add(this);
						this._Administracion = value.Codigo;
					}
					else
					{
						this._Administracion = default(int);
					}
					this.SendPropertyChanged("TipoAdministracionVacuna");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Vacuna", Storage="_Paciente1", ThisKey="Paciente", OtherKey="Email", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Vacuna.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Vacuna.Add(this);
						this._Paciente = value.Email;
					}
					else
					{
						this._Paciente = default(string);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
