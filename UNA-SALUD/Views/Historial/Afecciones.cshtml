@model UNA_SALUD.Models.AfeccionRegistro
@using ModeloDatos.Database

@section  Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/HistorialAfeccionesScript.js")"></script>
}

<h2>Afecciones del paciente<span id="pacienteAfecciones" class="text-muted"> @ViewBag.Paciente.Email</span></h2>

<p>
    <button type="button" class="btn btn-default" onclick="AbrilModalAgregarAfeccion();">Agregar Afeccion</button>

</p>
<table class="table" id="listarAfecciones">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaInicio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaFin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Detalle)
            </th>
            <th>Acciones</th>
        </tr>
    </thead>
</table>
<!-- Modal -->
<div id="modalAgregarAfeccion" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "formAgregarAfeccion" }))
        {

            @Html.Hidden("Codigo")
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Agregar Afeccion</h4>
                </div>
                <div class="modal-body">
                    <p>Digite la informacion de la afeccion que desea agregar</p>
                    <br />
                    <div class="input-group col-md-12">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.Paciente)
                        </span>
                        @Html.EditorFor(model => model.Paciente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Paciente, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.Nombre)
                        </span>
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(m => m.Estado)
                        @Html.DropDownListFor(m => m.Estado, // 1. Store selected value in Model.State;
                                                             // when page is rendered after postback,
                                                             // take selected value from Model.State.

                                              // 2. Take list of values from Model.States
                                              Model.Estados,

                                              // 3. Text for the first 'default' option
                                              "- Escoja un estado -",

                                              //4. A class name to assign to <select> tag
                                              new { @class = "form-control" })
                    </div>

                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.Detalle)
                        </span>
                        @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.FechaInicio)
                        </span>
                        @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.FechaFin)
                        </span>
                        @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="guardarAfeccion()" class="btn btn-info"><i class="fa fa-plus"></i> Guardar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        }
    </div>
</div>


<!-- Modal -->
<div id="modalEditarAfeccion" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->


        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "formEditarAfeccion" }))
        {
            @Html.Hidden("CodigoTR")
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Editar Afeccion</h4>
                </div>
                <div class="modal-body">
                    <p>Edite la informacion que desea de la afeccion</p>
                    <br />
                    <div class="input-group col-md-12">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.Paciente)
                        </span>
                        @Html.EditorFor(model => model.Paciente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Paciente, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.Nombre)
                        </span>
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(m => m.Estado)
                        @Html.DropDownListFor(m => m.Estado, // 1. Store selected value in Model.State;
                                                             // when page is rendered after postback,
                                                             // take selected value from Model.State.

                                              // 2. Take list of values from Model.States
                                              Model.Estados,

                                               // 3. Text for the first 'default' option
                                               "- Escoja un estado -",

                                              //4. A class name to assign to <select> tag
                                              new { @class = "form-control" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.Detalle)
                        </span>
                        @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.FechaInicio)
                        </span>
                        @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.FechaFin)
                        </span>
                        @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                    </div>


                    <div class="input-group col-md-12" style="display: none;">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.Codigo)
                        </span>
                        @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" onclick="guardarEditarAfeccion();" class="btn btn-info"><i class="fa fa-plus"></i> Guardar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        }
    </div>
</div>
